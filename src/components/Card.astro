---
interface Props {
  color?: string;
  colord?: string;
}
import colors from '../config/colors.json';

if (Astro.props.color === undefined) {
  Astro.props.color =
    colors[Math.floor(Math.random() * colors.length)];
}
if (Astro.props.colord === undefined) {
  Astro.props.colord =
    colors[Math.floor(Math.random() * colors.length)];
}

const { color, colord } = Astro.props;
---

<style define:vars={{ color: color, colord: colord}}>
  div.brutal-card {
    background-color: var(--color);
    border-radius: 0.5rem;
    border: 3px solid black;
    filter: drop-shadow(7px 7px 0 rgb(0 0 0 / 1));
    transition: all;
    padding: 1rem;
    transition-duration: 0.3s;
    animation: ease-in-out;
  }
  html.dark div.brutal-card {
    background-color: var(--colord);
    border-radius: 1.5rem;
    border: 3x solid black;
    filter: drop-shadow(7px 7px 0 rgb(0 0 0 / 1));
    transition: all;
    padding: 1rem;
    transition-duration: 0.3s;
    animation: ease-in-out;
  }
  div.brutal-card:hover {
    filter: drop-shadow(5px 5px 0 rgb(0 0 0 / 1));
    background-image: linear-gradient(to top left, rgb(236, 72, 153), rgb(239, 68, 68), rgb(234, 179, 8));

  }
  html.dark div.brutal-card:hover {
    filter: drop-shadow(5px 5px 0 rgb(0 0 0 / 1));
    background-image: linear-gradient(to bottom, var(--colord), rgb(3, 105, 161), rgb(190, 242, 100));
  }
</style>

<div class='brutal-card'>
  <slot />
</div>
